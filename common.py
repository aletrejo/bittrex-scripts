from sqlalchemy import (create_engine, MetaData, Table, Column, Integer, String, Float, insert)
import argparse

class DataAccessLayer:
	connection = None
	engine = None
	conn_string = None
	metadata = MetaData()

	#Create database table 
	market_summaries = Table('marketsummaries', metadata, 
    Column('MarketName', String(), primary_key=True),
    Column('High', Float()),
    Column('Low', Float()),
    Column('Volume', Float()),
    Column('Last', Float()),
    Column('BaseVolume', Float()),
    Column('TimeStamp', String()), 
    Column('Bid', Float()), 
    Column('Ask', Float()),
    Column('OpenBuyOrders', Integer()),
    Column('OpenSellOrders', Integer()), 
    Column('PrevDay', Float()),
    Column('Created', String()),
    )

	#Initialize database 
	def db_init(self, conn_string, echo):
		self.engine = create_engine(conn_string or self.conn_string, echo = echo)
		self.metadata.create_all(self.engine)
		self.connection = self.engine.connect()

class HelpText:
	#Path help text adapted from SQLite documentation here: http://docs.sqlalchemy.org/en/latest/core/engines.html#sqlite
	path_help = ''' This is the file path to the database.
	Relative path:
	foo.db
	Absolute path:
	#Unix/Mac
	"/absolute/path/to/foo.db"
	#Windows
	"C:\\path\\to\\foo.db"'''

	debug_help = "Turns echo on so SQL statements generated by the script are printed to the terminal."

dal = DataAccessLayer()
ht = HelpText()